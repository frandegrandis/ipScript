# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'try.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os

from PyQt5 import QtCore, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QSizePolicy, QVBoxLayout, QGridLayout, QLabel, QPushButton

from IPTableWidget import IPTable
from ipAnalyzer import IPAnalyzer


def generateDataFrom(filePath):
    ip_analyzer = IPAnalyzer(filePath)
    return ip_analyzer.getIPList()


def IPTableWidgetSetup(data):
    ip_table = IPTable(data)
    ip_table.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
    return ip_table


class UiMainWindow(QtWidgets.QWidget):
    def __init__(self):
        super().__init__()
        # create The main layout
        self.grid_layout: QGridLayout = QGridLayout()
        # Create components
        self.FileRouteLabel: QLabel = QLabel()
        self.searchFileButton = self.searchFileButtonSetup()
        self.ipTable: IPTable = IPTableWidgetSetup([])

        # Add components to layout
        self.grid_layout.addWidget(self.FileRouteLabel, 0, 0)
        self.grid_layout.addWidget(self.searchFileButton, 0, 1)
        self.grid_layout.addWidget(self.ipTable, 1, 0, 1, 2)

        # Set the layout on the application's window
        self.setLayout(self.grid_layout)

    def searchFileButtonSetup(self):
        search_file_button: QPushButton = QPushButton("Examinar")
        search_file_button.setMaximumSize(QtCore.QSize(200, 250))
        search_file_button.clicked.connect(self.getFileName)
        return search_file_button

    def getFileName(self):
        file_filter = 'Data File (*);'
        response = QFileDialog.getOpenFileName(
            parent=self,
            caption='Select a data file',
            directory=os.getcwd(),
            filter=file_filter,
            initialFilter='Data File (*)'
        )
        self.updateLayout(response[0])
        return response[0]

    def updateLayout(self, file_name):  # This message update the layout
        self.FileRouteLabel.setText(file_name)
        print('flag')
        if file_name != '':
            self.grid_layout.removeWidget(self.ipTable)  # we remove the actual table
            data = generateDataFrom(file_name)
            self.ipTable = IPTableWidgetSetup(data)  # we create the new table
            self.grid_layout.addWidget(self.ipTable, 1, 0, 1, 2)
